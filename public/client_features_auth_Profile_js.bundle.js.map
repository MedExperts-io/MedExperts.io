{"version":3,"file":"client_features_auth_Profile_js.bundle.js","mappings":"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","sources":["webpack://medexperts.io/./client/features/auth/Profile.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Row, Col, Container, Card, Button, Modal } from \"react-bootstrap\";\nimport { editProfile } from \"./authSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [validated, setValidated] = useState(false);\n  const { id, firstName, lastName, email, expertise, school } = useSelector((state) => state.auth.me);\n  const [userFirstName, setUserFirstName] = useState(firstName);\n  const [userLastName, setUserLastName] = useState(lastName);\n  const [userExpertise, setUserExpertise] = useState(expertise);\n  const [userSchool, setUserSchool] = useState(school);\n\n  // modal details\n  const [show, setShow] = useState(false);\n  const handleClose = () => {\n    setValidated(false);\n    setShow(false);\n  };\n  const handleShow = () => setShow(true);\n  // end modal details\n\n  const clearText = (evt) => {\n    evt.target.value = \"\";\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    dispatch(\n      editProfile({\n        id,\n        firstName: userFirstName,\n        lastName: userLastName,\n        expertise: userExpertise,\n        school: userSchool,\n      })\n    );\n    setValidated(true);\n  };\n\n  const expertiseOptions = [\"Student\", \"Resident\", \"Fellow\", \"Physician Assistant\", \"Nurse\", \"Nurse Practitioner\", \"Pharmacist\", \"Internal Med\", \"Other\"];\n\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-center align-items-center\" style={{ paddingTop: \"5rem\" }}>\n        <Col md={10} lg={6} s={10} xs={12}>\n          <Card className=\"mx-auto\" id=\"edit-profile-card\">\n            <Card.Header className=\"text-center\" id=\"edit-profile-card-header\">\n              Edit My Profile\n            </Card.Header>\n            <Card.Body>\n              <Col>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                  <Row className=\"mb-3\">\n                    <Form.Group as={Col} controlId=\"firstName\">\n                      <Form.Label className=\"\">\n                        First Name <span className=\"asterisk\">*</span>\n                      </Form.Label>\n                      <Form.Control\n                        onClick={clearText}\n                        type=\"text\"\n                        defaultValue={userFirstName}\n                        onChange={(e) => {\n                          setUserFirstName(e.target.value);\n                        }}\n                        onBlur={(e) => (e.target.placeholder = userFirstName)}\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"lastName\">\n                      <Form.Label className=\"\">\n                        Last Name <span className=\"asterisk\">*</span>\n                      </Form.Label>\n                      <Form.Control\n                        onClick={clearText}\n                        type=\"text\"\n                        defaultValue={userLastName}\n                        onChange={(e) => {\n                          setUserLastName(e.target.value);\n                        }}\n                        onBlur={(e) => (e.target.placeholder = userLastName)}\n                      />\n                    </Form.Group>\n                  </Row>\n                  <Row className=\"mb-3\">\n                    <Form.Group as={Col} controlId=\"school\">\n                      <Form.Label className=\"\">School</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        defaultValue={school}\n                        onClick={clearText}\n                        onChange={(e) => {\n                          setUserSchool(e.target.value);\n                        }}\n                        onBlur={(e) => (school && school.length ? (e.target.placeholder = userSchool) : (e.target.placeholder = \"\"))}\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"expertiseLevel\">\n                      <Form.Label className=\"\">\n                        Expertise Level <span className=\"asterisk\">*</span>\n                      </Form.Label>\n                      <Form.Select\n                        aria-label=\"default select example\"\n                        onChange={(e) => {\n                          setUserExpertise(e.target.value);\n                        }}\n                      >\n                        {expertiseOptions\n                          .filter((current, expertise) => {\n                            return current !== expertise;\n                          })\n                          .map((level, idx) => {\n                            return (\n                              <option value={level} key={idx}>\n                                {level}\n                              </option>\n                            );\n                          })}\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row className=\"mb-3\">\n                    <Form.Group as={Col} controlId=\"email\">\n                      <Form.Label className=\"\">Email Address</Form.Label>\n                      <Form.Control\n                        type=\"email\"\n                        disabled\n                        readOnly\n                        aria-describedby=\"disabled input for email address\"\n                        placeholder={email}\n                      ></Form.Control>\n                    </Form.Group>\n                  </Row>\n                  <center>\n                    <Button type=\"submit\" variant=\"success\" onClick={handleShow}>\n                      Update\n                    </Button>\n                  </center>\n\n                  <Modal show={show} onHide={handleClose}>\n                    <Modal.Body>Your changes have been recorded!</Modal.Body>\n                    <Modal.Footer>\n                      <Button variant=\"success\" onClick={handleClose}>\n                        Keep Editing\n                      </Button>\n                      <Button variant=\"success\" onClick={() => navigate(\"/dashboard\")}>\n                        Dashboard\n                      </Button>\n                    </Modal.Footer>\n                  </Modal>\n                </Form>\n              </Col>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"names":["React","useState","useDispatch","useSelector","Form","Row","Col","Container","Card","Button","Modal","editProfile","useNavigate","Profile","dispatch","navigate","_useState","_useState2","_slicedToArray","validated","setValidated","_useSelector","state","auth","me","id","firstName","lastName","email","expertise","school","_useState3","_useState4","userFirstName","setUserFirstName","_useState5","_useState6","userLastName","setUserLastName","_useState7","_useState8","userExpertise","setUserExpertise","_useState9","_useState10","userSchool","setUserSchool","_useState11","_useState12","show","setShow","handleClose","handleShow","clearText","evt","target","value","handleSubmit","preventDefault","expertiseOptions","createElement","className","style","paddingTop","md","lg","s","xs","Header","Body","noValidate","onSubmit","Group","as","controlId","Label","Control","onClick","type","defaultValue","onChange","e","onBlur","placeholder","length","Select","filter","current","map","level","idx","key","disabled","readOnly","variant","onHide","Footer"],"sourceRoot":""}