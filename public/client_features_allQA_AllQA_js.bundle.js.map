{"version":3,"file":"client_features_allQA_AllQA_js.bundle.js","mappings":"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","sources":["webpack://medexperts.io/./client/features/allQA/AllQA.js","webpack://medexperts.io/./client/features/allQA/AllQAadmin.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown, Row, Col, Form, Container } from \"react-bootstrap\";\nimport { fetchAllQuestionsAnswers } from \"./allQASlice\";\nimport {\n  fetchUserQuestions,\n  updateUserQuestion,\n} from \"../stats/user_questionsSlice\";\nimport ReactPaginate from \"react-paginate\";\nimport LoadingScreen from \"../loading/LoadingScreen\";\nimport { Chip } from \"@mui/material\";\nimport AllQAadmin from \"./AllQAadmin\";\n\nconst QuestionsAnswers = () => {\n  const dispatch = useDispatch();\n  const itemsPerPage = 12;\n  const [itemOffset, setItemOffset] = useState(0);\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n\n  const difficultyLevels = [\"All Levels\", \"Easy\", \"Moderate\", \"Hard\"];\n  const [currentDifficulty, setCurrentDifficulty] = useState(\n    difficultyLevels[0]\n  );\n  const categories = [\n    \"All Categories\",\n    \"Asthma\",\n    \"Bronchiectasis\",\n    \"Chronic Obstructive Pulmonary Disease\",\n    \"Critical Care\",\n    \"Infection\",\n    \"Interstitial Lung Diseases\",\n    \"Lung Cancer\",\n    \"Lung Transplant\",\n    \"Mediastinal Disorders\",\n    \"Other Pulmonary Diseases\",\n    \"Pharmacology\",\n    \"Pleural Diseases\",\n    \"Pulmonary Function Testing\",\n    \"Pulmonary Vascular Disease\",\n    \"Sleep\",\n  ];\n  const [currentCategory1, setCurrentCategory1] = useState(categories[0]);\n  const userExpertise = [\n    \"All Expertise\",\n    \"Student\",\n    \"Resident\",\n    \"Fellow\",\n    \"Physician Assistant\",\n    \"Nurse\",\n    \"Nurse Practitioner\",\n    \"Pharmacist\",\n    \"Internal Med\",\n    \"Other\",\n  ];\n  const answerStatusOptions = [\"All\", \"Answered\", \"Unanswered\"];\n  const currentAnswerStatus = useRef(answerStatusOptions[0]);\n  const answerCorrectOptions = [\"All\", \"Correct\", \"Incorrect\"];\n  const currentCorrectStatus = useRef(answerCorrectOptions[0]);\n  const currentExpertise = useRef(userExpertise[0]);\n  const userExpertiseRelation = {\n    \"All Expertise\": null,\n    Student: [true, \"Easy\"],\n    Resident: [false, \"Hard\"],\n    Fellow: null,\n    \"Physician Assistant\": [true, \"Easy\"],\n    Nurse: [true, \"Easy\"],\n    \"Nurse Practitioner\": [true, \"Easy\"],\n    Pharmacist: [true, \"Easy\"],\n    \"Internal Med\": null,\n    Other: null,\n  };\n  const [seeFavorites, setSeeFavorites] = useState(true);\n  let isFavorited = false;\n\n  const onFavoriteSwitch = () => {\n    seeFavorites ? (isFavorited = true) : null;\n    setSeeFavorites(!seeFavorites);\n    filterFunction();\n  };\n  const loading = useSelector((state) => state.questionsAnswers.loading);\n\n  let filterCriteria = [currentDifficulty, currentCategory1];\n\n  const admin = useSelector((state) => state.auth.me.isAdmin);\n  const { UserQuestions, userEasy, userModerate, userHard } = useSelector(\n    (state) => state.userQuestions\n  );\n  const UserQuestionsAnswered = UserQuestions.filter(\n    (question) => question.answered !== null\n  );\n  const { questionsAnswers, easy, moderate, hard } = useSelector(\n    (state) => state.questionsAnswers\n  );\n  const easyPercentage = Math.round((userEasy?.length / easy?.length) * 100);\n  const moderatePercentage = Math.round(\n    (userModerate?.length / moderate?.length) * 100\n  );\n  const hardPercentage = Math.round((userHard?.length / hard?.length) * 100);\n  const allPercentage = Math.round(\n    (UserQuestionsAnswered?.length / questionsAnswers?.length) * 100\n  );\n\n  let rightOrWrong = {};\n  UserQuestions ? (rightOrWrong = userRightOrWrong(UserQuestions)) : null;\n\n  let allQuestions = [...questionsAnswers];\n  allQuestions.sort((a, b) => a.displayId - b.displayId);\n  const [filteredQuestions, setfilteredQuestions] = useState(null);\n  allQuestions.length && !filteredQuestions\n    ? setfilteredQuestions(allQuestions)\n    : null;\n\n  const endOffset = itemOffset + itemsPerPage;\n  filteredQuestions && !pageCount\n    ? setPageCount(Math.ceil(filteredQuestions.length / itemsPerPage))\n    : null;\n  filteredQuestions && !currentItems\n    ? setCurrentItems(filteredQuestions.slice(itemOffset, endOffset))\n    : null;\n\n  const truncate = (string) => {\n    if (string.length > 50) {\n      return string.slice(0, 50) + \"...\";\n    } else {\n      return string;\n    }\n  };\n\n  function userRightOrWrong(array) {\n    let map = {};\n    for (let i = 0; i < array.length; i++) {\n      if (!map[array[i][\"questionAnswerId\"]]) {\n        map[array[i][\"questionAnswerId\"]] = array[i][\"answered\"];\n      }\n    }\n    return map;\n  }\n\n  const favorite = (questionId) => {\n    dispatch(\n      updateUserQuestion({\n        questionAnswerId: questionId,\n      })\n    ).then(() => dispatch(fetchUserQuestions()));\n  };\n\n  const favoriteStatus = (questionId) => {\n    const question = UserQuestions?.filter(\n      (question) => question.questionAnswerId == questionId\n    );\n    if (question && question[0] && question[0].favorite) return true;\n    return false;\n  };\n\n  const pickDifficulty = (event) => {\n    setCurrentDifficulty(event);\n    !seeFavorites ? (isFavorited = true) : null;\n    filterCriteria[0] = event;\n    filterFunction();\n  };\n\n  const pickExpertise = (event) => {\n    currentExpertise.current = event;\n    !seeFavorites ? (isFavorited = true) : null;\n    filterFunction();\n  };\n\n  const pickCategory1 = (event) => {\n    setCurrentCategory1(event);\n    !seeFavorites ? (isFavorited = true) : null;\n    filterCriteria[1] = event;\n    filterFunction();\n  };\n\n  const changeAnswerStatus = (event) => {\n    currentAnswerStatus.current = event;\n    !seeFavorites ? (isFavorited = true) : null;\n    filterFunction();\n  };\n\n  const changeCorrectStatus = (event) => {\n    currentCorrectStatus.current = event;\n    !seeFavorites ? (isFavorited = true) : null;\n    filterFunction();\n  };\n\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage;\n    setItemOffset(newOffset);\n    const endOffset = newOffset + itemsPerPage;\n    setPageCount(Math.ceil(filteredQuestions.length / itemsPerPage));\n    setCurrentItems(filteredQuestions.slice(newOffset, endOffset));\n  };\n\n  const handleKeyDown = (callback, param, event) => {\n    console.log(\"KEY\", event.key, \"PARAM\", param, \"CALLBACK\", callback);\n    if (param) {\n      callback(param);\n    } else {\n      callback();\n    }\n  };\n\n  const filterFunction = () => {\n    let multiFilter = allQuestions;\n\n    let rightAnswers = UserQuestions.filter(\n      (question) => question.answered === \"right\"\n    ).map((question) => question.questionAnswerId);\n    let wrongAnswers = UserQuestions.filter(\n      (question) => question.answered === \"wrong\"\n    ).map((question) => question.questionAnswerId);\n    let answered = UserQuestions.filter(\n      (question) => question.answered !== null\n    ).map((question) => question.questionAnswerId);\n\n    let favNumbers = UserQuestions.filter(\n      (question) => question.favorite === true\n    ).map((question) => question.questionAnswerId);\n\n    currentAnswerStatus.current === \"Answered\"\n      ? (multiFilter = multiFilter.filter((question) =>\n          answered.includes(question.id)\n        ))\n      : null;\n    currentAnswerStatus.current === \"Unanswered\"\n      ? (multiFilter = multiFilter.filter(\n          (question) => !answered.includes(question.id)\n        ))\n      : null;\n\n    currentCorrectStatus.current === \"Correct\"\n      ? (multiFilter = multiFilter.filter((question) =>\n          rightAnswers.includes(question.id)\n        ))\n      : null;\n    currentCorrectStatus.current === \"Incorrect\"\n      ? (multiFilter = multiFilter.filter((question) =>\n          wrongAnswers.includes(question.id)\n        ))\n      : null;\n\n    isFavorited\n      ? (multiFilter = multiFilter.filter((question) =>\n          favNumbers.includes(question.id)\n        ))\n      : null;\n\n    if (userExpertiseRelation[currentExpertise.current]) {\n      if (userExpertiseRelation[currentExpertise.current][0] === true) {\n        multiFilter = multiFilter.filter(\n          (question) =>\n            question.level ===\n            userExpertiseRelation[currentExpertise.current][1]\n        );\n      } else {\n        multiFilter = multiFilter.filter(\n          (question) =>\n            question.level !==\n            userExpertiseRelation[currentExpertise.current][1]\n        );\n      }\n    }\n\n    for (let i = 0; i < filterCriteria.length; i++) {\n      if (\n        filterCriteria[i] === \"All Levels\" ||\n        filterCriteria[i] === \"All Categories\"\n      ) {\n        continue;\n      } else {\n        multiFilter = multiFilter.filter(\n          (question) =>\n            question.level === filterCriteria[i] ||\n            question.category === filterCriteria[i]\n        );\n      }\n    }\n\n    multiFilter.length ? setfilteredQuestions(multiFilter) : null;\n    multiFilter.length\n      ? setCurrentItems(multiFilter.slice(0, 12))\n      : setCurrentItems(\"nada\");\n    multiFilter.length\n      ? setPageCount(Math.ceil(multiFilter.length / itemsPerPage))\n      : setPageCount(0);\n    setItemOffset(0);\n  };\n\n  const progressCircleBackground = (progress, color) => {\n    const angle = 360 * progress;\n    return `radial-gradient(white 50%, transparent 51%),\n    conic-gradient(transparent 0deg ${angle}deg, gainsboro ${angle}deg 360deg),\n    conic-gradient(${color} 360deg, ${color})`;\n  };\n\n  const cardBodyColor = (id) => {\n    if (rightOrWrong && rightOrWrong[id] === \"right\") {\n      return \"rgb(144, 238, 144, .25)\";\n    } else if (rightOrWrong && rightOrWrong[id] === \"wrong\") {\n      return \"rgb(0, 0, 0, .10)\";\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchAllQuestionsAnswers());\n    dispatch(fetchUserQuestions());\n  }, []);\n\n  const styles = {\n    progressBarEasy: {\n      background: progressCircleBackground(easyPercentage / 100, \"lightgreen\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarModerate: {\n      background: progressCircleBackground(moderatePercentage / 100, \"#f5ad27\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarHard: {\n      background: progressCircleBackground(hardPercentage / 100, \"#f55b49\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarAll: {\n      background: progressCircleBackground(allPercentage / 100, \"#bf5eff\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarBackground: {\n      position: \"absolute\",\n      bottom: \"30%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"60%\",\n    },\n    progressBarMiddle: {\n      position: \"absolute\",\n      bottom: \"40%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"150%\",\n    },\n  };\n\n  const previousButton = document.querySelector('[aria-label=\"Previous page\"]');\n  previousButton ? previousButton.remove() : null;\n  const nextButton = document.querySelector('[aria-label=\"Next page\"]');\n  nextButton ? nextButton.remove() : null;\n\n  if (admin) {\n    return <AllQAadmin />;\n  } else {\n    return (\n      <Container fluid>\n        <Row style={{ marginTop: \"30px\", marginBottom: \"35px\" }}>\n          <Card\n            className=\"mx-auto\"\n            style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n          >\n            <Card.Header style={{ marginBottom: \"20px\", fontSize: `200%` }}>\n              <center>\n                <h1>My Progress</h1>\n              </center>\n            </Card.Header>{\" \"}\n            <Card.Body>\n              <Row>\n                <Col>\n                  <div className=\"visually-hidden\">\n                    Easy Level {easyPercentage}% Completed\n                  </div>\n                  <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto \">\n                    <div className=\"mx-auto\" style={styles.progressBarEasy}>\n                      <div style={styles.progressBarMiddle}>\n                        {easyPercentage}%\n                      </div>\n                      <div style={styles.progressBarBackground}>Completed</div>\n                    </div>\n                    <Card.Title\n                      className=\"mx-auto\"\n                      style={{ paddingTop: \"5px\" }}\n                    >\n                      Easy Level\n                    </Card.Title>\n                  </Card>\n                </Col>\n\n                <Col>\n                  <div className=\"visually-hidden\">\n                    Moderate Level {moderatePercentage}% Completed\n                  </div>\n                  <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                    <div className=\"mx-auto\" style={styles.progressBarModerate}>\n                      <div style={styles.progressBarMiddle}>\n                        {moderatePercentage}%\n                      </div>\n                      <div style={styles.progressBarBackground}>Completed</div>\n                    </div>\n                    <Card.Title\n                      className=\"mx-auto\"\n                      style={{ paddingTop: \"5px\" }}\n                    >\n                      <center>Moderate Level</center>\n                    </Card.Title>\n                  </Card>\n                </Col>\n\n                <Col>\n                  <div className=\"visually-hidden\">\n                    Hard Level {hardPercentage}% Completed\n                  </div>\n                  <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                    <div className=\"mx-auto\" style={styles.progressBarHard}>\n                      <div style={styles.progressBarMiddle}>\n                        {hardPercentage}%\n                      </div>\n                      <div style={styles.progressBarBackground}>Completed</div>\n                    </div>\n                    <Card.Title\n                      className=\"mx-auto\"\n                      style={{ paddingTop: \"5px\" }}\n                    >\n                      Hard Level\n                    </Card.Title>\n                  </Card>\n                </Col>\n\n                <Col>\n                  <div className=\"visually-hidden\">\n                    All Levels {allPercentage}% Completed\n                  </div>\n                  <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                    <div className=\"mx-auto\" style={styles.progressBarAll}>\n                      <div style={styles.progressBarMiddle}>\n                        {allPercentage}%\n                      </div>\n                      <div style={styles.progressBarBackground}>Completed</div>\n                    </div>\n                    <Card.Title\n                      className=\"mx-auto\"\n                      style={{ paddingTop: \"5px\" }}\n                    >\n                      All Levels\n                    </Card.Title>\n                  </Card>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Row>\n\n        <Row style={{ marginBottom: \"30px\" }}>\n          <Card\n            className=\"mx-auto\"\n            style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n          >\n            <Card.Header\n              style={{\n                marginBottom: \"20px\",\n                fontSize: \"200%\",\n                boxShadow: \"0px 0px 10px 0px rgba(200,200,200,0.75)\",\n                textAlign: \"center\",\n              }}\n            >\n              <Col className=\"mx-auto\">\n                <h2>\n                  {currentExpertise.current} & {currentDifficulty} &{\" \"}\n                  {currentCategory1}\n                </h2>\n              </Col>\n            </Card.Header>\n            <Card.Body>\n              <Row\n                style={{ marginBottom: \"20px\" }}\n                xs=\"auto\"\n                className=\"justify-content-center\"\n              >\n                <Col>\n                  <Dropdown\n                    onSelect={(event) => pickExpertise(event)}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      For {currentExpertise.current}s\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {userExpertise.map((expertise) => (\n                        <Dropdown.Item key={expertise} eventKey={expertise}>\n                          {expertise}\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col>\n                  <Dropdown\n                    onSelect={(event) => pickDifficulty(event)}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      {currentDifficulty}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {difficultyLevels.map((difficulty) => (\n                        <Dropdown.Item key={difficulty} eventKey={difficulty}>\n                          {difficulty}\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col>\n                  <Dropdown\n                    onSelect={(event) => pickCategory1(event)}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      {currentCategory1}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {categories.map((category) => (\n                        <Dropdown.Item key={category} eventKey={category}>\n                          {category}\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col>\n                  <Dropdown\n                    onSelect={(event) => changeAnswerStatus(event)}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      {currentAnswerStatus.current}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {answerStatusOptions.map((category) => (\n                        <Dropdown.Item key={category} eventKey={category}>\n                          {category}\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                <Col>\n                  <Dropdown\n                    onSelect={(event) => changeCorrectStatus(event)}\n                    style={{ marginBottom: \"10px\" }}\n                  >\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      {currentCorrectStatus.current}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      {answerCorrectOptions.map((category) => (\n                        <Dropdown.Item key={category} eventKey={category}>\n                          {category}\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n\n                <Col>\n                  <Form>\n                    <Form.Switch\n                      tabIndex={0}\n                      onChange={() => onFavoriteSwitch()}\n                      onKeyDown={(event) =>\n                        event.key === \"Space\" || event.key === \"Enter\"\n                          ? handleKeyDown(onFavoriteSwitch, null, event)\n                          : null\n                      }\n                      id=\"Favorites Only Switch\"\n                      label=\"Favorites Only\"\n                      checked={!seeFavorites}\n                    />\n                  </Form>\n                </Col>\n              </Row>\n              {/* ---------------------- question cards mapped onto page\n              ----------------------- */}\n              <Row className=\"justify-content-center\">\n                {loading && <LoadingScreen />}\n                {currentItems &&\n                currentItems.length &&\n                currentItems !== \"nada\" ? (\n                  currentItems.map((question) => (\n                    <Card\n                      className=\"questionCard\"\n                      key={question.id}\n                      style={{\n                        padding: \"0px\",\n                        width: \"18rem\",\n                        marginRight: \"10px\",\n                        marginLeft: \"10px\",\n                        marginBottom: \"20px\",\n                        boxShadow: \"0px 0px 10px 0px rgba(200,200,200,0.75)\",\n                      }}\n                    >\n                      <Card.Header\n                        style={{\n                          backgroundColor: question.color,\n                        }}\n                      />\n                      <Card.Body\n                        style={{\n                          backgroundColor: cardBodyColor(question.id),\n                        }}\n                      >\n                        <Link\n                          aria-label={`Question Number ${question.displayId}, difficulty: ${question.level} `}\n                          style={{ textDecoration: \"none\" }}\n                          to={`/questions/${question.id}`}\n                        >\n                          <Card.Title\n                            style={{\n                              color: \"black\",\n                              textAlign: \"center\",\n                              fontSize: \"20px\",\n                            }}\n                          >\n                            Question Number {question.displayId}\n                          </Card.Title>\n                        </Link>\n                        <Card.Text\n                          style={{\n                            color: \"black\",\n                            textAlign: \"center\",\n                            fontSize: \"15px\",\n                          }}\n                        >\n                          {truncate(question.question)}\n                        </Card.Text>\n                      </Card.Body>\n                      <Card.Footer>\n                        <Chip\n                          alt={`${question.category}`}\n                          label={\n                            question.category ===\n                            \"Chronic Obstructive Pulmonary Disease\"\n                              ? \"COPD\"\n                              : question.category\n                          }\n                          onClick={() => pickCategory1(question.category)}\n                          onKeyDown={(event) =>\n                            event.key === \"Space\" || event.key === \"Enter\"\n                              ? handleKeyDown(\n                                  pickCategory1,\n                                  question.category,\n                                  event\n                                )\n                              : null\n                          }\n                          color=\"default\"\n                          variant=\"outlined\"\n                          size=\"small\"\n                        />{\" \"}\n                        <button\n                          onClick={() => favorite(question.id)}\n                          onKeyDown={(event) =>\n                            event.key === \"Space\" || event.key === \"Enter\"\n                              ? handleKeyDown(\n                                  () => favorite,\n                                  question.id,\n                                  event\n                                )\n                              : null\n                          }\n                          style={{\n                            border: \"none\",\n                            background: \"none\",\n                            float: \"right\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <Card.Img\n                            tabIndex={-1}\n                            type=\"button\"\n                            alt={`Heart button for question ${\n                              question.displayId\n                            }. ${\n                              favoriteStatus(question.id)\n                                ? \"Favorited\"\n                                : \"Not Favorited\"\n                            } `}\n                            style={{ width: \"20px\", height: \"20px\" }}\n                            variant=\"top\"\n                            src={\n                              favoriteStatus(question.id)\n                                ? \"/heart(red).webp\"\n                                : \"/heart.webp\"\n                            }\n                          />\n                        </button>\n                      </Card.Footer>\n                    </Card>\n                  ))\n                ) : (\n                  <center>\n                    \"Sorry, we didn't find anything matching that\"\n                  </center>\n                )}\n              </Row>\n              <Row className=\"justify-content-center\">\n                <Card className=\"mx-auto\" id=\"no-border\">\n                  <ReactPaginate\n                    className=\"pagination mx-auto\"\n                    nextLabel=\"next >\"\n                    onPageChange={handlePageClick}\n                    pageRangeDisplayed={3}\n                    marginPagesDisplayed={2}\n                    pageCount={pageCount}\n                    previousLabel=\"< previous\"\n                    pageClassName=\"page-item\"\n                    pageLinkClassName=\"page-link\"\n                    previousClassName=\"page-item\"\n                    previousLinkClassName=\"page-link\"\n                    nextClassName=\"page-item\"\n                    nextLinkClassName=\"page-link\"\n                    breakLabel=\". . .\"\n                    breakClassName=\"page-item\"\n                    breakLinkClassName=\"page-link\"\n                    containerClassName=\"pagination\"\n                    activeClassName=\"active\"\n                  />\n                </Card>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Row>\n      </Container>\n    );\n  }\n};\n\nexport default QuestionsAnswers;\n","import AddIcon from \"@mui/icons-material/Add\";\nimport { Chip, Fab, LinearProgress, Stack } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Card,\n  Col,\n  Container,\n  Dropdown,\n  Form,\n  Modal,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoadingScreen from \"../loading/LoadingScreen\";\nimport {\n  fetchActiveQAs,\n  fetchAllUserQuestions,\n  fetchByAnswerFrequency,\n  fetchExpertiseQuestions,\n  fetchPercentCorrect,\n  fetchUserQuestions,\n  updateUserQuestion,\n} from \"../stats/user_questionsSlice\";\nimport { fetchAllQuestionsAnswers } from \"./allQASlice\";\nimport AddQuestion from \"../addQ/AddQuestion\";\n\nconst AllQAadmin = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector((state) => state.auth.me.id);\n  const itemsPerPage = 12;\n  const [itemOffset, setItemOffset] = useState(0);\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n\n  const difficultiyLevels = [\"All Levels\", \"Easy\", \"Moderate\", \"Hard\"];\n  const [currentDifficulty, setCurrentDifficulty] = useState(\n    difficultiyLevels[0]\n  );\n  const userExpertise = [\n    \"All Expertise\",\n    \"Student\",\n    \"Resident\",\n    \"Fellow\",\n    \"Physician Assistant\",\n    \"Nurse\",\n    \"Nurse Practitioner\",\n    \"Pharmacist\",\n    \"Internal Med\",\n    \"Other\",\n  ];\n  const expertisePicked = useRef(\"All Expertise\");\n  const [currentCategory2, setCurrentCategory2] = useState(userExpertise[0]);\n  const categories = [\n    \"All Categories\",\n    \"Asthma\",\n    \"Bronchiectasis\",\n    \"Chronic Obstructive Pulmonary Disease\",\n    \"Critical Care\",\n    \"Infection\",\n    \"Interstitial Lung Diseases\",\n    \"Lung Cancer\",\n    \"Lung Transplant\",\n    \"Mediastinal Disorders\",\n    \"Other Pulmonary Diseases\",\n    \"Pharmacology\",\n    \"Pleural Diseases\",\n    \"Pulmonary Function Testing\",\n    \"Pulmonary Vascular Disease\",\n    \"Sleep\",\n  ];\n  const [currentCategory1, setCurrentCategory1] = useState(categories[0]);\n  const frequencyList = [\"Frequency Sort\", \"Most Answered\", \"Least Answered\"];\n  const currentFrequency = useRef(frequencyList[0]);\n  const percentCorrectList = [\n    \"Percent Correct Sort\",\n    \"Most Correct\",\n    \"Least Correct\",\n  ];\n  const currentPercent = useRef(percentCorrectList[0]);\n  const [seeFavorites, setSeeFavorites] = useState(true);\n\n  let isFavorited = false;\n\n  const onFavoriteSwitch = () => {\n    seeFavorites ? (isFavorited = true) : null;\n    setSeeFavorites(!seeFavorites);\n    filterFunction();\n  };\n\n  const userExpertiseSelection = (event) => {\n    setCurrentCategory2(event);\n    !seeFavorites ? (isFavorited = true) : null;\n    expertisePicked.current = event;\n    filterFunction();\n  };\n\n  const loading = useSelector((state) => state.questionsAnswers.loading);\n\n  let filterCriteria = [currentDifficulty, currentCategory1];\n\n  const {\n    mostAnswered,\n    leastAnswered,\n    mostCorrect,\n    leastCorrect,\n    activeUserQAs,\n  } = useSelector((state) => state.userQuestions);\n  const userQuestions = useSelector(\n    (state) => state.userQuestions.UserQuestions\n  );\n  const AllUserQuestions = useSelector(\n    (state) => state.userQuestions.allUserQuestions\n  );\n  const stateQuestions = useSelector(\n    (state) => state.questionsAnswers.questionsAnswers\n  );\n  const expertiseQuestions = useSelector(\n    (state) => state.userQuestions.expertiseQuestions\n  );\n\n  const EasyQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Easy\"\n  );\n  const ModerateQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Moderate\"\n  );\n  const HardQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Hard\"\n  );\n\n  const UsereasyQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Easy\" && question.answered === \"right\"\n  );\n  const UserModerateQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Moderate\" && question.answered === \"right\"\n  );\n  const UserHardQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Hard\" && question.answered === \"right\"\n  );\n  const UserAllQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.answered === \"right\"\n  );\n\n  const easyQuestionsAnsweredPercentage =\n    (UsereasyQuestionsTotal.length / EasyQuestionsTotal.length) * 100;\n  const moderateQuestionsAnsweredPercentage =\n    (UserModerateQuestionsTotal.length / ModerateQuestionsTotal.length) * 100;\n  const hardQuestionsAnsweredPercentage =\n    (UserHardQuestionsTotal.length / HardQuestionsTotal.length) * 100;\n  const allQuestionAnsweredPercentage =\n    (UserAllQuestionsTotal.length / AllUserQuestions.length) * 100;\n\n  let allQuestions = [...stateQuestions];\n  allQuestions.sort((a, b) => a.displayId - b.displayId);\n\n  const filteredQuestions = useRef(null);\n  allQuestions.length && !filteredQuestions.current\n    ? (filteredQuestions.current = allQuestions)\n    : null;\n\n  const endOffset = itemOffset + itemsPerPage;\n  filteredQuestions.current && !pageCount\n    ? setPageCount(Math.ceil(filteredQuestions.current.length / itemsPerPage))\n    : null;\n  filteredQuestions.current && !currentItems\n    ? setCurrentItems(filteredQuestions.current.slice(itemOffset, endOffset))\n    : null;\n\n  const truncate = (string) => {\n    if (string.length > 20) {\n      return string.slice(0, 50) + \"...\";\n    } else {\n      return string;\n    }\n  };\n\n  const data = (id) => {\n    const filterDataById = AllUserQuestions.filter(\n      (x) => x.questionAnswerId === id\n    );\n    const filterDataByCorrect = filterDataById.filter(\n      (x) => x.answered === \"right\"\n    );\n\n    const percentageCorrect = Math.round(\n      (filterDataByCorrect.length / filterDataById.length) * 100\n    );\n    if (percentageCorrect || percentageCorrect === 0) {\n      return percentageCorrect;\n    } else {\n      return null;\n    }\n  };\n  const filterDataById = (id) => {\n    const filterData = AllUserQuestions.filter(\n      (x) => x.questionAnswerId === id\n    );\n    return filterData.length;\n  };\n  const filterDataByCorrect = (id) => {\n    const filterData = AllUserQuestions.filter(\n      (x) => x.questionAnswerId === id\n    );\n    const filterDataByRight = filterData.filter((x) => x.answered === \"right\");\n    return filterDataByRight.length;\n  };\n\n  const favorite = (questionId) => {\n    dispatch(\n      updateUserQuestion({\n        questionAnswerId: questionId,\n      })\n    ).then(() => dispatch(fetchUserQuestions()));\n  };\n\n  const favoriteStatus = (questionId) => {\n    const question = userQuestions.filter(\n      (question) => question.questionAnswerId == questionId\n    );\n    if (question[0] && question[0].favorite) return true;\n    return false;\n  };\n\n  const pickDifficulty = (event) => {\n    setCurrentDifficulty(event);\n    !seeFavorites ? (isFavorited = true) : null;\n    filterCriteria[0] = event;\n    filterFunction();\n  };\n  const pickCategory1 = (event) => {\n    setCurrentCategory1(event);\n    !seeFavorites ? (isFavorited = true) : null;\n    filterCriteria[1] = event;\n    filterFunction();\n  };\n\n  const pickFrequency = (event) => {\n    currentFrequency.current = event;\n    !seeFavorites ? (isFavorited = true) : null;\n    filterFunction();\n  };\n\n  const pickPercentCorrect = (event) => {\n    currentPercent.current = event;\n    !seeFavorites ? (isFavorited = true) : null;\n    filterFunction();\n  };\n\n  const handlePageClick = (event) => {\n    const newOffset = event.selected * itemsPerPage;\n    setItemOffset(newOffset);\n    const endOffset = newOffset + itemsPerPage;\n    setPageCount(Math.ceil(filteredQuestions.current.length / itemsPerPage));\n    setCurrentItems(filteredQuestions.current.slice(newOffset, endOffset));\n  };\n\n  const filterFunction = () => {\n    let multiFilter = allQuestions;\n\n    currentFrequency.current === \"Frequency Sort\"\n      ? null\n      : (multiFilter = frequencySort(\n          multiFilter,\n          activeUserQAs,\n          currentFrequency.current\n        ));\n    currentPercent.current === \"Percent Correct Sort\"\n      ? null\n      : (multiFilter = percentCorrectSort(\n          multiFilter,\n          activeUserQAs,\n          currentPercent.current\n        ));\n    currentPercent.current === \"Least Correct\" &&\n    currentFrequency.current === \"Least Answered\"\n      ? (multiFilter = frequencySort(\n          multiFilter,\n          activeUserQAs,\n          currentFrequency.current\n        ))\n      : null;\n    currentPercent.current === \"Least Correct\" &&\n    currentFrequency.current === \"Most Answered\"\n      ? (multiFilter = percentCorrectSort(\n          multiFilter,\n          activeUserQAs,\n          currentPercent.current\n        ))\n      : null;\n\n    let favNumbers = userQuestions\n      .filter((question) => question.favorite === true)\n      .map((question) => question.questionAnswerId);\n    isFavorited\n      ? (multiFilter = multiFilter.filter((question) =>\n          favNumbers.includes(question.id)\n        ))\n      : null;\n\n    for (let i = 0; i < filterCriteria.length; i++) {\n      if (\n        filterCriteria[i] === \"All Levels\" ||\n        filterCriteria[i] === \"All Categories\"\n      ) {\n        continue;\n      } else {\n        multiFilter = multiFilter.filter(\n          (question) =>\n            question.level === filterCriteria[i] ||\n            question.category === filterCriteria[i]\n        );\n      }\n    }\n\n    multiFilter = expertiseFilterFunction(multiFilter);\n\n    multiFilter.length ? (filteredQuestions.current = multiFilter) : null;\n    multiFilter.length\n      ? setCurrentItems(multiFilter.slice(0, 12))\n      : setCurrentItems(\"nada\");\n    multiFilter.length\n      ? setPageCount(Math.ceil(multiFilter.length / itemsPerPage))\n      : setPageCount(0);\n    setItemOffset(0);\n    return multiFilter;\n  };\n\n  const progressCircleBackground = (progress, color) => {\n    const angle = 360 * progress;\n\n    return `radial-gradient(white 50%, transparent 51%),\n    conic-gradient(transparent 0deg ${angle}deg, gainsboro ${angle}deg 360deg),\n    conic-gradient(${color} 360deg, ${color})`;\n  };\n\n  const frequencySort = (allQAs, allUserQs, type) => {\n    if (allQAs.length === 0) return [];\n    let frequency = {};\n\n    for (let i = 0; i < allUserQs.length; i++) {\n      if (!frequency[allUserQs[i][\"questionAnswerId\"]]) {\n        frequency[allUserQs[i][\"questionAnswerId\"]] = 1;\n      } else {\n        frequency[allUserQs[i][\"questionAnswerId\"]]++;\n      }\n    }\n    for (let i = 0; i < allQAs.length; i++) {\n      if (!frequency[allQAs[i][\"id\"]]) {\n        frequency[allQAs[i][\"id\"]] = 1;\n      } else {\n        frequency[allQAs[i][\"id\"]]++;\n      }\n    }\n\n    const allQuestions = allQAs.map((question) => {\n      return {\n        ...question,\n        frequency: frequency[question.id],\n      };\n    });\n\n    const sortedByFrequency = allQuestions\n      .slice()\n      .sort((a, b) => b.frequency - a.frequency);\n    const sortedByFrequencyReverse = allQuestions\n      .slice()\n      .sort((a, b) => a.frequency - b.frequency);\n\n    if (type === \"Most Answered\") {\n      return sortedByFrequency;\n    } else if (type === \"Least Answered\") {\n      return sortedByFrequencyReverse;\n    }\n  };\n\n  const percentCorrectSort = (allQAs, allUserQs, type) => {\n    if (allQAs.length === 0) return [];\n\n    let frequency = {};\n    for (let i = 0; i < allQAs.length; i++) {\n      if (!frequency[allQAs[i][\"id\"]]) {\n        frequency[allQAs[i][\"id\"]] = { right: 0, total: 0 };\n      }\n    }\n\n    for (let i = 0; i < allUserQs.length; i++) {\n      if (allUserQs[i][\"answered\"] === \"right\") {\n        frequency[allUserQs[i][\"questionAnswerId\"]][\"right\"]++;\n        frequency[allUserQs[i][\"questionAnswerId\"]][\"total\"]++;\n      } else {\n        frequency[allUserQs[i][\"questionAnswerId\"]][\"total\"]++;\n      }\n    }\n\n    const allQuestions = allQAs.map((question) => {\n      return {\n        ...question,\n        percentCorrect:\n          Math.round(\n            (frequency[question.id][\"right\"] /\n              frequency[question.id][\"total\"]) *\n              100\n          ) || 0,\n      };\n    });\n    const sortedByPercentCorrect = allQuestions\n      .slice()\n      .sort((a, b) => b.percentCorrect - a.percentCorrect);\n    const sortedByPercentCorrectReverse = allQuestions\n      .slice()\n      .sort((a, b) => a.percentCorrect - b.percentCorrect);\n\n    if (type === \"Most Correct\") {\n      return sortedByPercentCorrect;\n    } else if (type === \"Least Correct\") {\n      return sortedByPercentCorrectReverse;\n    }\n  };\n\n  const expertiseFilterFunction = (multiFilter) => {\n    if (expertisePicked.current === \"All Expertise\") {\n      return multiFilter;\n    }\n\n    const userQAs = expertiseQuestions[expertisePicked.current];\n    const userQAIds = userQAs.map((question) => question.id);\n\n    multiFilter = multiFilter.filter((question) =>\n      userQAIds.includes(question.id)\n    );\n    return multiFilter;\n  };\n\n  useEffect(() => {\n    dispatch(fetchExpertiseQuestions());\n    dispatch(fetchAllQuestionsAnswers());\n    dispatch(fetchUserQuestions());\n    dispatch(fetchAllUserQuestions());\n    dispatch(fetchByAnswerFrequency());\n    dispatch(fetchPercentCorrect());\n    dispatch(fetchActiveQAs());\n  }, []);\n\n  const styles = {\n    progressBarEasy: {\n      background: progressCircleBackground(\n        UsereasyQuestionsTotal.length / EasyQuestionsTotal.length || 0,\n        \"lightgreen\"\n      ),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarModerate: {\n      background: progressCircleBackground(\n        UserModerateQuestionsTotal.length / ModerateQuestionsTotal.length || 0,\n        \"#f5ad27\"\n      ),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarHard: {\n      background: progressCircleBackground(\n        UserHardQuestionsTotal.length / HardQuestionsTotal.length || 0,\n        \"#f55b49\"\n      ),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarAll: {\n      background: progressCircleBackground(\n        UserAllQuestionsTotal.length / AllUserQuestions.length || 0,\n        \"#bf5eff\"\n      ),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarBackground: {\n      position: \"absolute\",\n      bottom: \"30%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"60%\",\n    },\n    progressBarMiddle: {\n      position: \"absolute\",\n      bottom: \"40%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"150%\",\n    },\n  };\n\n  const previousButton = document.querySelector('[aria-label=\"Previous page\"]');\n  previousButton ? previousButton.remove() : null;\n  const nextButton = document.querySelector('[aria-label=\"Next page\"]');\n  nextButton ? nextButton.remove() : null;\n\n  //add question modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleOpen = () => setShow(true);\n\n  return (\n    <Container fluid>\n      <OverlayTrigger\n        key=\"top\"\n        style={{ backgroundColor: \"black\" }}\n        placement=\"top\"\n        overlay={<Tooltip id=\"tooltip-top\">Add new question</Tooltip>}\n      >\n        <Fab\n          size=\"medium\"\n          onClick={handleOpen}\n          aria-label=\"add new question\"\n          style={{\n            position: \"fixed\",\n            bottom: \"15px\",\n            right: \"8px\",\n            backgroundColor: \"green\",\n          }}\n        >\n          <AddIcon style={{ color: \"white\" }} />\n        </Fab>\n      </OverlayTrigger>\n      <Modal\n        size=\"lg\"\n        centered\n        scrollable={true}\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header\n          closeButton\n          style={\n            {\n              //alignSelf: \"center\",\n            }\n          }\n        >\n          <Modal.Title\n            style={{\n              fontWeight: \"bold\",\n              fontSize: \"150%\",\n              padding: \"0px\",\n            }}\n          >\n            Add New Question\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddQuestion />\n        </Modal.Body>\n      </Modal>\n      <Row style={{ marginTop: \"30px\", marginBottom: \"35px\" }}>\n        <Card\n          className=\"mx-auto\"\n          style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n        >\n          <Card.Header style={{ marginBottom: \"20px\", fontSize: `200%` }}>\n            <center>Student Progress</center>\n            <Row>\n              <p style={{ fontSize: `50%` }} className=\"\">\n                The below charts represent the percentage of questions answered\n                correctly in each category (i.e., of the 'Easy' questions\n                answered,{\" \"}\n                {Math.round(\n                  (UsereasyQuestionsTotal.length / EasyQuestionsTotal.length) *\n                    100\n                ) || 0}\n                % were answered correctly).\n              </p>\n            </Row>\n          </Card.Header>{\" \"}\n          <Card.Body>\n            <Row>\n              <Col>\n                <div className=\"visually-hidden\">\n                  Easy Level{\" \"}\n                  {Math.round(\n                    (UsereasyQuestionsTotal.length /\n                      EasyQuestionsTotal.length) *\n                      100\n                  ) || 0}\n                  % Completed\n                </div>\n                <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                  <div className=\"mx-auto\" style={styles.progressBarEasy}>\n                    <div style={styles.progressBarMiddle}>\n                      {Math.round(\n                        (UsereasyQuestionsTotal.length /\n                          EasyQuestionsTotal.length) *\n                          100\n                      ) || 0}\n                      %\n                    </div>\n                    <div style={styles.progressBarBackground}>Correct</div>\n                  </div>\n                  <Card.Title className=\"mx-auto\" style={{ paddingTop: \"5px\" }}>\n                    Easy Level\n                  </Card.Title>\n                </Card>\n              </Col>\n\n              <Col>\n                <div className=\"visually-hidden\">\n                  Moderate Level{\" \"}\n                  {Math.round(\n                    (UserModerateQuestionsTotal.length /\n                      ModerateQuestionsTotal.length) *\n                      100\n                  ) || 0}\n                  % Completed\n                </div>\n                <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                  <div className=\"mx-auto\" style={styles.progressBarModerate}>\n                    <div style={styles.progressBarMiddle}>\n                      {Math.round(\n                        (UserModerateQuestionsTotal.length /\n                          ModerateQuestionsTotal.length) *\n                          100\n                      ) || 0}\n                      %\n                    </div>\n                    <div style={styles.progressBarBackground}>Correct</div>\n                  </div>\n                  <Card.Title className=\"mx-auto\" style={{ paddingTop: \"5px\" }}>\n                    <center>Moderate Level</center>\n                  </Card.Title>\n                </Card>\n              </Col>\n\n              <Col>\n                <div className=\"visually-hidden\">\n                  Hard Level{\" \"}\n                  {Math.round(\n                    (UserHardQuestionsTotal.length /\n                      HardQuestionsTotal.length) *\n                      100\n                  ) || 0}\n                  % Completed\n                </div>\n                <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                  <div className=\"mx-auto\" style={styles.progressBarHard}>\n                    <div style={styles.progressBarMiddle}>\n                      {Math.round(\n                        (UserHardQuestionsTotal.length /\n                          HardQuestionsTotal.length) *\n                          100\n                      ) || 0}\n                      %\n                    </div>\n                    <div style={styles.progressBarBackground}>Correct</div>\n                  </div>\n                  <Card.Title className=\"mx-auto\" style={{ paddingTop: \"5px\" }}>\n                    Hard Level\n                  </Card.Title>\n                </Card>\n              </Col>\n\n              <Col>\n                <div className=\"visually-hidden\">\n                  All Levels{\" \"}\n                  {Math.round(\n                    (UserAllQuestionsTotal.length / AllUserQuestions.length) *\n                      100\n                  ) || 0}\n                  % Completed\n                </div>\n                <Card id=\"no-border\" aria-hidden=\"true\" className=\"mx-auto\">\n                  <div className=\"mx-auto\" style={styles.progressBarAll}>\n                    <div style={styles.progressBarMiddle}>\n                      {Math.round(\n                        (UserAllQuestionsTotal.length /\n                          AllUserQuestions.length) *\n                          100\n                      ) || 0}\n                      %\n                    </div>\n                    <div style={styles.progressBarBackground}>Correct</div>\n                  </div>\n                  <Card.Title className=\"mx-auto\" style={{ paddingTop: \"5px\" }}>\n                    All Levels\n                  </Card.Title>\n                </Card>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Row>\n\n      <Row style={{ marginBottom: \"30px\" }}>\n        <Card\n          className=\"mx-auto\"\n          style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n        >\n          <Card.Header\n            style={{\n              marginBottom: \"20px\",\n              fontSize: \"200%\",\n              boxShadow: \"0px 0px 10px 0px rgba(200,200,200,0.75)\",\n              textAlign: \"center\",\n            }}\n          >\n            <Col className=\"mx-auto\">\n              {currentDifficulty} & {currentCategory1}\n            </Col>\n          </Card.Header>\n          <Card.Body>\n            <Row\n              xs=\"auto\"\n              style={{ marginBottom: \"30px\" }}\n              className=\"justify-content-center\"\n            >\n              <Col md=\"auto\">\n                <Dropdown onSelect={(event) => pickDifficulty(event)}>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {currentDifficulty}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    {difficultiyLevels.map((difficulty) => (\n                      <Dropdown.Item key={difficulty} eventKey={difficulty}>\n                        {difficulty}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col md=\"auto\">\n                <Dropdown onSelect={(event) => pickCategory1(event)}>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {currentCategory1}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    {categories.map((category) => (\n                      <Dropdown.Item key={category} eventKey={category}>\n                        {category}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n\n                  <Dropdown.Menu>\n                    {categories.map((category) => (\n                      <Dropdown.Item key={category} eventKey={category}>\n                        {category}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n\n              <Col md=\"auto\">\n                <Dropdown\n                  onSelect={(event) => userExpertiseSelection(event)}\n                  style={{ marginBottom: \"10px\" }}\n                >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {expertisePicked.current}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {userExpertise.map((expertise) => (\n                      <Dropdown.Item key={expertise} eventKey={expertise}>\n                        {expertise}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n\n              <Col md=\"auto\">\n                <Dropdown onSelect={(event) => pickFrequency(event)}>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {currentFrequency.current}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    {frequencyList.map((frequency) => (\n                      <Dropdown.Item key={frequency} eventKey={frequency}>\n                        {frequency}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n\n              <Col md=\"auto\">\n                <Dropdown onSelect={(event) => pickPercentCorrect(event)}>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {currentPercent.current}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                    {percentCorrectList.map((correct) => (\n                      <Dropdown.Item key={correct} eventKey={correct}>\n                        {correct}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n\n              <Col md=\"auto\">\n                <Form>\n                  <Form.Switch\n                    onChange={() => onFavoriteSwitch()}\n                    id=\"custom-switch\"\n                    label=\"Favorites Only\"\n                    checked={!seeFavorites}\n                  />\n                </Form>\n              </Col>\n            </Row>\n            {/* ---------------------- question cards mapped onto page\n              ----------------------- */}\n\n            <Row className=\"justify-content-center\">\n              {loading && <LoadingScreen />}\n              {currentItems && currentItems.length && currentItems !== \"nada\"\n                ? currentItems.map((question, idx) => (\n                    <Card\n                      key={question.id}\n                      style={{\n                        padding: \"0px\",\n                        width: \"18rem\",\n                        marginRight: \"10px\",\n                        marginLeft: \"10px\",\n                        marginBottom: \"20px\",\n                        boxShadow: \"0px 0px 10px 0px rgba(200,200,200,0.75)\",\n                      }}\n                    >\n                      <Card.Header\n                        style={{ backgroundColor: question.color }}\n                      />\n                      <Card.Body>\n                        <Card.Title\n                          style={{\n                            fontSize: \"20px\",\n                            textAlign: \"center\",\n                            color: \"black\",\n                          }}\n                        >\n                          <Link\n                            aria-label={`Question Number ${question.displayId}, difficulty: ${question.level} `}\n                            to={`/questions/${question.id}`}\n                            style={{ textDecoration: `none`, color: \"black\" }}\n                          >\n                            Question Number {question.displayId}\n                          </Link>\n                        </Card.Title>\n                        <Card.Text\n                          style={{ fontSize: \"15px\", textAlign: \"center\" }}\n                        >\n                          {truncate(question.question)}\n                        </Card.Text>\n                        <Stack spacing={0.5}>\n                          <Chip\n                            label={\n                              <Stack spacing={2}>{`Correct Response: ${\n                                data(question.id) || data(question.id) === 0\n                                  ? data(question.id)\n                                  : 0\n                              }%`}</Stack>\n                            }\n                            color={`${\n                              data(question.id) && data(question.id) >= 50\n                                ? \"success\"\n                                : \"error\"\n                            }`}\n                            variant=\"outlined\"\n                          />\n\n                          <Chip\n                            label={`Total Response(s): ${filterDataById(\n                              question.id\n                            )}`}\n                            size=\"small\"\n                            color=\"primary\"\n                            variant=\"outlined\"\n                          />\n                        </Stack>\n                      </Card.Body>\n                      <LinearProgress\n                        sx={{ width: \"100%\", height: 8, pb: 0, mb: 0 }}\n                        variant=\"determinate\"\n                        value={data(question.id)}\n                        color={`${\n                          data(question.id) && data(question.id) >= 50\n                            ? \"success\"\n                            : \"error\"\n                        }`}\n                        aria-hidden=\"true\"\n                      />\n                      <Card.Footer>\n                        <Chip\n                          label={\n                            question.category ===\n                            \"Chronic Obstructive Pulmonary Disease\"\n                              ? \"COPD\"\n                              : question.category\n                          }\n                          onClick={() => pickCategory1(question.category)}\n                          color=\"default\"\n                          size=\"small\"\n                          variant=\"outlined\"\n                        />\n                        <button\n                          onClick={() => favorite(question.id)}\n                          style={{\n                            border: \"none\",\n                            background: \"none\",\n                            float: \"right\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <Card.Img\n                            tabIndex={-1}\n                            type=\"button\"\n                            alt={`Heart button for question ${\n                              question.displayId\n                            }. ${\n                              favoriteStatus(question.id)\n                                ? \"Favorited\"\n                                : \"Not Favorited\"\n                            } `}\n                            style={{ width: \"20px\" }}\n                            variant=\"top\"\n                            src={\n                              favoriteStatus(question.id)\n                                ? \"/heart(red).webp\"\n                                : \"/heart.webp\"\n                            }\n                          />\n                        </button>\n                      </Card.Footer>\n                    </Card>\n                  ))\n                : \"Sorry, we didn't find anything matching that\"}\n            </Row>\n            <Row className=\"justify-content-center\">\n              <Card className=\"mx-auto\" id=\"no-border\">\n                <ReactPaginate\n                  className=\"pagination mx-auto\"\n                  onPageChange={handlePageClick}\n                  pageRangeDisplayed={3}\n                  marginPagesDisplayed={2}\n                  pageCount={pageCount}\n                  pageClassName=\"page-item\"\n                  pageLinkClassName=\"page-link\"\n                  previousClassName=\"page-item\"\n                  previousLinkClassName=\"page-link\"\n                  nextClassName=\"page-item\"\n                  nextLinkClassName=\"page-link\"\n                  breakLabel=\"...\"\n                  breakClassName=\"page-item\"\n                  breakLinkClassName=\"page-link\"\n                  containerClassName=\"pagination\"\n                  activeClassName=\"active\"\n                />{\" \"}\n              </Card>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AllQAadmin;\n"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","Link","Card","Dropdown","Row","Col","Form","Container","fetchAllQuestionsAnswers","fetchUserQuestions","updateUserQuestion","ReactPaginate","LoadingScreen","Chip","AllQAadmin","QuestionsAnswers","dispatch","itemsPerPage","_useState","_useState2","_slicedToArray","itemOffset","setItemOffset","_useState3","_useState4","currentItems","setCurrentItems","_useState5","_useState6","pageCount","setPageCount","difficultyLevels","_useState7","_useState8","currentDifficulty","setCurrentDifficulty","categories","_useState9","_useState10","currentCategory1","setCurrentCategory1","userExpertise","answerStatusOptions","currentAnswerStatus","answerCorrectOptions","currentCorrectStatus","currentExpertise","userExpertiseRelation","Student","Resident","Fellow","Nurse","Pharmacist","Other","_useState11","_useState12","seeFavorites","setSeeFavorites","isFavorited","onFavoriteSwitch","filterFunction","loading","state","questionsAnswers","filterCriteria","admin","auth","me","isAdmin","_useSelector","userQuestions","UserQuestions","userEasy","userModerate","userHard","UserQuestionsAnswered","filter","question","answered","_useSelector2","easy","moderate","hard","easyPercentage","Math","round","length","moderatePercentage","hardPercentage","allPercentage","rightOrWrong","userRightOrWrong","allQuestions","_toConsumableArray","sort","a","b","displayId","_useState13","_useState14","filteredQuestions","setfilteredQuestions","endOffset","ceil","slice","truncate","string","array","map","i","favorite","questionId","questionAnswerId","then","favoriteStatus","pickDifficulty","event","pickExpertise","current","pickCategory1","changeAnswerStatus","changeCorrectStatus","handlePageClick","newOffset","selected","handleKeyDown","callback","param","console","log","key","multiFilter","rightAnswers","wrongAnswers","favNumbers","includes","id","level","_loop","category","_ret","progressCircleBackground","progress","color","angle","concat","cardBodyColor","styles","progressBarEasy","background","borderRadius","width","height","position","progressBarModerate","progressBarHard","progressBarAll","progressBarBackground","bottom","textAlign","fontSize","progressBarMiddle","previousButton","document","querySelector","remove","nextButton","createElement","fluid","style","marginTop","marginBottom","className","paddingLeft","paddingRight","maxWidth","Header","Body","Title","paddingTop","boxShadow","xs","onSelect","Toggle","variant","Menu","expertise","Item","eventKey","difficulty","Switch","tabIndex","onChange","onKeyDown","label","checked","padding","marginRight","marginLeft","backgroundColor","textDecoration","to","Text","Footer","alt","onClick","size","border","cursor","Img","type","src","nextLabel","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","AddIcon","Fab","LinearProgress","Stack","Modal","OverlayTrigger","Tooltip","fetchActiveQAs","fetchAllUserQuestions","fetchByAnswerFrequency","fetchExpertiseQuestions","fetchPercentCorrect","AddQuestion","userId","difficultiyLevels","expertisePicked","currentCategory2","setCurrentCategory2","frequencyList","currentFrequency","percentCorrectList","currentPercent","userExpertiseSelection","mostAnswered","leastAnswered","mostCorrect","leastCorrect","activeUserQAs","AllUserQuestions","allUserQuestions","stateQuestions","expertiseQuestions","EasyQuestionsTotal","ModerateQuestionsTotal","HardQuestionsTotal","UsereasyQuestionsTotal","UserModerateQuestionsTotal","UserHardQuestionsTotal","UserAllQuestionsTotal","easyQuestionsAnsweredPercentage","moderateQuestionsAnsweredPercentage","hardQuestionsAnsweredPercentage","allQuestionAnsweredPercentage","data","filterDataById","x","filterDataByCorrect","percentageCorrect","filterData","filterDataByRight","pickFrequency","pickPercentCorrect","frequencySort","percentCorrectSort","expertiseFilterFunction","allQAs","allUserQs","frequency","_objectSpread","sortedByFrequency","sortedByFrequencyReverse","right","total","percentCorrect","sortedByPercentCorrect","sortedByPercentCorrectReverse","userQAs","userQAIds","_useState15","_useState16","show","setShow","handleClose","handleOpen","placement","overlay","centered","scrollable","onHide","backdrop","keyboard","closeButton","fontWeight","md","correct","idx","spacing","sx","pb","mb","value"],"sourceRoot":""}