{"version":3,"file":"client_features_landingPage_Dashboard_js.bundle.js","mappings":"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","sources":["webpack://medexperts.io/./client/features/landingPage/Dashboard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Stack from \"@mui/material/Stack\";\nimport {\n  fetchAllUsers,\n  fetchUserQuestions,\n  fetchAllUserQuestions,\n} from \"../stats/user_questionsSlice\";\nimport { fetchAllQuestionsAnswers } from \"../allQA/allQASlice\";\nimport { Card, Row, Col, Container } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    isAdmin\n      ? dispatch(fetchAllQuestionsAnswers()).then(() =>\n          dispatch(fetchAllUserQuestions())\n        )\n      : dispatch(fetchAllQuestionsAnswers()).then(() =>\n          dispatch(fetchUserQuestions())\n        );\n    isAdmin ? dispatch(fetchAllUsers()) : null;\n  }, []);\n\n  const allUsers = useSelector((state) => state.userQuestions.allUsers);\n  const isAdmin = useSelector((state) => state.auth.me.isAdmin);\n  const AllUserQuestions = useSelector(\n    (state) => state.userQuestions.UserQuestions\n  );\n  const EasyQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Easy\"\n  );\n  const ModerateQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Moderate\"\n  );\n  const HardQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Hard\"\n  );\n  const UsereasyQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Easy\" && question.answered === \"right\"\n  );\n  const UserModerateQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Moderate\" && question.answered === \"right\"\n  );\n  const UserHardQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.level === \"Hard\" && question.answered === \"right\"\n  );\n  const UserAllQuestionsTotal = AllUserQuestions.filter(\n    (question) => question.answered === \"right\"\n  );\n  const { UserQuestions, userEasy, userModerate, userHard } = useSelector(\n    (state) => state.userQuestions\n  );\n  const UserQuestionsAnswered = UserQuestions.filter(\n    (question) => question.answered !== null\n  );\n  const { questionsAnswers, easy, moderate, hard } = useSelector(\n    (state) => state.questionsAnswers\n  );\n  const easyPercentage = Math.round((userEasy?.length / easy?.length) * 100);\n  const totalEasyAnswered = `${userEasy?.length} / ${easy?.length}`;\n  const moderatePercentage = Math.round(\n    (userModerate?.length / moderate?.length) * 100\n  );\n  const totalmoderateAnswere = `${userModerate?.length} / ${moderate?.length}`;\n  const hardPercentage = Math.round((userHard?.length / hard?.length) * 100);\n  const totalhardAnswered = `${userHard?.length} / ${hard?.length}`;\n  const allPercentage = Math.round(\n    (UserQuestionsAnswered?.length / questionsAnswers?.length) * 100\n  );\n  const totalallAnswered = `${UserQuestionsAnswered?.length} / ${questionsAnswers?.length}`;\n\n  const progressBarRatio = (category, plainText) => {\n    const questionAnswers = questionsAnswers.filter(\n      (question) => question.category === category\n    ).length;\n    const userAnswers = UserQuestions.filter(\n      (question) => question.category === category\n    ).length;\n\n    if (plainText) {\n      return `${userAnswers} / ${questionAnswers}`;\n    } else {\n      return userAnswers / questionAnswers;\n    }\n  };\n\n  const allCategories = [\n    \"Asthma\",\n    \"Bronchiectasis\",\n    \"Chronic Obstructive Pulmonary Disease\",\n    \"Critical Care\",\n    \"Infection\",\n    \"Interstitial Lung Diseases\",\n    \"Lung Cancer\",\n    \"Lung Transplant\",\n    \"Mediastinal Disorders\",\n    \"Other Pulmonary Diseases\",\n    \"Pharmacology\",\n    \"Pleural Diseases\",\n    \"Pulmonary Function Testing\",\n    \"Pulmonary Vascular Disease\",\n    \"Sleep\",\n  ];\n\n  const progressCircleBackground = (progress, color) => {\n    const angle = 360 * progress;\n    return `radial-gradient(white 50%, transparent 51%),\n    conic-gradient(transparent 0deg ${angle}deg, gainsboro ${angle}deg 360deg),\n    conic-gradient(${color} 360deg, ${color})`;\n  };\n  const { firstName } = useSelector((state) => state.auth.me);\n\n  const styles = {\n    progressBarEasy: {\n      background: progressCircleBackground(easyPercentage / 100, \"lightgreen\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarModerate: {\n      background: progressCircleBackground(moderatePercentage / 100, \"#f5ad27\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarHard: {\n      background: progressCircleBackground(hardPercentage / 100, \"#f55b49\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarAll: {\n      background: progressCircleBackground(allPercentage / 100, \"#bf5eff\"),\n      borderRadius: \"50%\",\n      width: \"120px\",\n      height: \"120px\",\n      position: \"relative\",\n    },\n    progressBarBackground: {\n      position: \"absolute\",\n      bottom: \"30%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"60%\",\n    },\n    progressBarMiddle: {\n      position: \"absolute\",\n      bottom: \"40%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"150%\",\n    },\n  };\n\n  const stylesCategory = {\n    progressBarBackground: {\n      position: \"absolute\",\n      bottom: \"30%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"60%\",\n    },\n    progressBarMiddle: {\n      position: \"absolute\",\n      bottom: \"40%\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: \"150%\",\n    },\n  };\n\n  return (\n    <Container fluid style={{ marginBottom: \"5%\" }}>\n      <div className=\"mx-auto\">\n        {!isAdmin ? (\n          <Stack>\n            <div className=\"welcome\">\n              Welcome,{\" \"}\n              {firstName\n                ? firstName.charAt(0).toUpperCase() + firstName.slice(1)\n                : \"User\"}\n              !\n            </div>\n            {/* top row answered amount out of total */}\n            <Stack>\n              <Row style={{ marginTop: \"30px\", marginBottom: \"35px\" }}>\n                <Card\n                  className=\"mx-auto\"\n                  style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n                >\n                  <Card.Header\n                    style={{ marginBottom: \"20px\", fontSize: `200%` }}\n                  >\n                    <center> Questions Answered </center>\n                  </Card.Header>{\" \"}\n                  <Card.Body>\n                    <Row>\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          Easy Level {totalEasyAnswered} Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto \"\n                        >\n                          <div\n                            className=\"mx-auto\"\n                            style={styles.progressBarEasy}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {totalEasyAnswered}\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Completed\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            Easy Level\n                          </Card.Title>\n                        </Card>\n                      </Col>\n\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          Moderate Level {totalmoderateAnswere} Completed\n                        </div>\n                        <Card\n                          title={`Moderate Level. ${totalmoderateAnswere} Completed`}\n                          aria-hidden=\"true\"\n                          id=\"no-border\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            className=\"mx-auto\"\n                            style={styles.progressBarModerate}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {totalmoderateAnswere}\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Completed\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            <center>Moderate Level</center>\n                          </Card.Title>\n                        </Card>\n                      </Col>\n\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          Hard Level {totalhardAnswered} Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            title={`Hard Level. ${totalhardAnswered} Completed`}\n                            className=\"mx-auto\"\n                            style={styles.progressBarHard}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {totalhardAnswered}\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Completed\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            Hard Level\n                          </Card.Title>\n                        </Card>\n                      </Col>\n\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          All Levels {totalallAnswered} Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            title={`All Levels. ${totalhardAnswered} Completed`}\n                            className=\"mx-auto\"\n                            style={styles.progressBarAll}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {totalallAnswered}\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Completed\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            All Levels\n                          </Card.Title>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                </Card>\n              </Row>\n            </Stack>\n\n            {/* middle row answered percentage out of total */}\n            <Stack>\n              <Row style={{ marginTop: \"30px\", marginBottom: \"35px\" }}>\n                <Card\n                  className=\"mx-auto\"\n                  style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n                >\n                  <Card.Header\n                    style={{ marginBottom: \"20px\", fontSize: `200%` }}\n                  >\n                    <center> Questions Answered Correctly </center>\n                  </Card.Header>{\" \"}\n                  <Card.Body>\n                    <Row>\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          Easy Level{\" \"}\n                          {Math.round(\n                            (UsereasyQuestionsTotal.length /\n                              EasyQuestionsTotal.length) *\n                              100\n                          ) || 0}\n                          % Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            title={`Easy Level. ${\n                              Math.round(\n                                (UsereasyQuestionsTotal.length /\n                                  EasyQuestionsTotal.length) *\n                                  100\n                              ) || 0\n                            }% Correct`}\n                            className=\"mx-auto\"\n                            style={styles.progressBarEasy}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {Math.round(\n                                (UsereasyQuestionsTotal.length /\n                                  EasyQuestionsTotal.length) *\n                                  100\n                              ) || 0}\n                              %\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Correct\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            Easy Level\n                          </Card.Title>\n                        </Card>\n                      </Col>\n\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          Moderate Level{\" \"}\n                          {Math.round(\n                            (UserModerateQuestionsTotal.length /\n                              ModerateQuestionsTotal.length) *\n                              100\n                          ) || 0}\n                          % Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            title={`Moderate Level. ${\n                              Math.round(\n                                (UserModerateQuestionsTotal.length /\n                                  ModerateQuestionsTotal.length) *\n                                  100\n                              ) || 0\n                            }% Correct`}\n                            className=\"mx-auto\"\n                            style={styles.progressBarModerate}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {Math.round(\n                                (UserModerateQuestionsTotal.length /\n                                  ModerateQuestionsTotal.length) *\n                                  100\n                              ) || 0}\n                              %\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Correct\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            <center>Moderate Level</center>\n                          </Card.Title>\n                        </Card>\n                      </Col>\n\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          Hard Level{\" \"}\n                          {Math.round(\n                            (UserHardQuestionsTotal.length /\n                              HardQuestionsTotal.length) *\n                              100\n                          ) || 0}\n                          % Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            title={`Hard Level. ${\n                              Math.round(\n                                (UserHardQuestionsTotal.length /\n                                  HardQuestionsTotal.length) *\n                                  100\n                              ) || 0\n                            }% Correct`}\n                            className=\"mx-auto\"\n                            style={styles.progressBarHard}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {Math.round(\n                                (UserHardQuestionsTotal.length /\n                                  HardQuestionsTotal.length) *\n                                  100\n                              ) || 0}\n                              %\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Correct\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            Hard Level\n                          </Card.Title>\n                        </Card>\n                      </Col>\n\n                      <Col>\n                        <div className=\"visually-hidden\">\n                          All Levels{\" \"}\n                          {Math.round(\n                            (UserAllQuestionsTotal.length /\n                              AllUserQuestions.length) *\n                              100\n                          ) || 0}\n                          % Completed\n                        </div>\n                        <Card\n                          id=\"no-border\"\n                          aria-hidden=\"true\"\n                          className=\"mx-auto\"\n                        >\n                          <div\n                            title={`All Levels. ${\n                              Math.round(\n                                (UserAllQuestionsTotal.length /\n                                  AllUserQuestions.length) *\n                                  100\n                              ) || 0\n                            }% Correct`}\n                            className=\"mx-auto\"\n                            style={styles.progressBarAll}\n                          >\n                            <div style={styles.progressBarMiddle}>\n                              {Math.round(\n                                (UserAllQuestionsTotal.length /\n                                  AllUserQuestions.length) *\n                                  100\n                              ) || 0}\n                              %\n                            </div>\n                            <div style={styles.progressBarBackground}>\n                              Correct\n                            </div>\n                          </div>\n                          <Card.Title\n                            className=\"mx-auto\"\n                            style={{ paddingTop: \"5px\" }}\n                          >\n                            All Levels\n                          </Card.Title>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                </Card>\n              </Row>\n            </Stack>\n\n            {/* bottom row answered amount out of total for each category */}\n            <Stack>\n              <Stack>\n                <Row style={{ marginTop: \"30px\", marginBottom: \"35px\" }}>\n                  <Card\n                    className=\"mx-auto\"\n                    style={{ paddingLeft: 0, paddingRight: 0, maxWidth: \"90%\" }}\n                  >\n                    <Card.Header\n                      style={{ marginBottom: \"20px\", fontSize: `200%` }}\n                    >\n                      <center> Categories </center>\n                    </Card.Header>\n                    <Card.Body>\n                      <Row>\n                        {allCategories.map((category) => (\n                          <Col\n                            key={uuidv4()}\n                            style={{\n                              paddingRight: \"60px\",\n                              paddingLeft: \"60px\",\n                              paddingTop: \"15px\",\n                            }}\n                          >\n                            <div className=\"visually-hidden\">\n                              {`${category} `}{\" \"}\n                              {progressBarRatio(category, true)} Completed\n                            </div>\n                            <Card\n                              id=\"no-border\"\n                              aria-hidden=\"true\"\n                              className=\"mx-auto\"\n                            >\n                              <div\n                                className=\"mx-auto\"\n                                style={{\n                                  background: progressCircleBackground(\n                                    progressBarRatio(category, false),\n                                    \"#f5ad27\"\n                                  ),\n                                  borderRadius: \"50%\",\n                                  width: \"100px\",\n                                  height: \"100px\",\n                                  position: \"relative\",\n                                }}\n                              >\n                                <div style={stylesCategory.progressBarMiddle}>\n                                  {progressBarRatio(category, true)}\n                                </div>\n                                <div\n                                  style={stylesCategory.progressBarBackground}\n                                >\n                                  Completed\n                                </div>\n                              </div>\n                              <center>\n                                <Card.Title\n                                  className=\"mx-auto\"\n                                  style={{ paddingTop: \"5px\" }}\n                                >\n                                  {category !==\n                                  \"Chronic Obstructive Pulmonary Disease\"\n                                    ? category\n                                    : \"COPD\"}\n                                </Card.Title>\n                              </center>\n                            </Card>\n                          </Col>\n                        ))}\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </Row>\n              </Stack>\n            </Stack>\n          </Stack>\n        ) : (\n          <>\n            <h5>Admin Dashboard place holder</h5>\n            Number of users. {allUsers.length}\n          </>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"names":["React","useEffect","useDispatch","useSelector","Stack","fetchAllUsers","fetchUserQuestions","fetchAllUserQuestions","fetchAllQuestionsAnswers","Card","Row","Col","Container","v4","uuidv4","Dashboard","dispatch","isAdmin","then","allUsers","state","userQuestions","auth","me","AllUserQuestions","UserQuestions","EasyQuestionsTotal","filter","question","level","ModerateQuestionsTotal","HardQuestionsTotal","UsereasyQuestionsTotal","answered","UserModerateQuestionsTotal","UserHardQuestionsTotal","UserAllQuestionsTotal","_useSelector","userEasy","userModerate","userHard","UserQuestionsAnswered","_useSelector2","questionsAnswers","easy","moderate","hard","easyPercentage","Math","round","length","totalEasyAnswered","concat","moderatePercentage","totalmoderateAnswere","hardPercentage","totalhardAnswered","allPercentage","totalallAnswered","progressBarRatio","category","plainText","questionAnswers","userAnswers","allCategories","progressCircleBackground","progress","color","angle","_useSelector3","firstName","styles","progressBarEasy","background","borderRadius","width","height","position","progressBarModerate","progressBarHard","progressBarAll","progressBarBackground","bottom","textAlign","fontSize","progressBarMiddle","stylesCategory","createElement","fluid","style","marginBottom","className","charAt","toUpperCase","slice","marginTop","paddingLeft","paddingRight","maxWidth","Header","Body","id","Title","paddingTop","title","map","key","Fragment"],"sourceRoot":""}